{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","this","showResetButton","goods","visibleGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","setState","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,+EAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAME,EAAb,4MACEC,MAAkB,CAChBC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,4CAME,WAAU,IAAD,OACP,EAAiCC,KAAKJ,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WACZE,EAAkBJ,IAAaJ,EAASK,MAAQC,EAChDG,EAjCV,SACEA,EADF,GAGG,IADCL,EACF,EADEA,SAAUE,EACZ,EADYA,WAENI,EAAY,YAAOD,GAEzB,OAAQL,GACN,KAAKJ,EAASW,SACZD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MACF,KAAKd,EAASgB,OACZN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAU7C,OAJIX,GACFI,EAAaQ,UAGRR,EAYSS,CAAkBlB,EAAiB,CAAEG,WAAUE,eAE7D,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBhB,IAAaJ,EAASW,SAAW,GAAK,YACnEW,QAAS,WACP,EAAKC,SAAS,CAAEnB,SAAUJ,EAASW,YAJvC,iCAUA,wBACEU,KAAK,SACLD,UAAS,4BAAuBhB,IAAaJ,EAASgB,OAAS,GAAK,YACpEM,QAAS,WACP,EAAKC,SAAS,CAAEnB,SAAUJ,EAASgB,UAJvC,4BAUA,wBACEK,KAAK,SACLD,UAAS,4BAAuBd,EAAa,GAAK,YAClDgB,QAAS,WACP,EAAKC,SAAS,CAAEjB,YAAaA,KAJjC,qBAUCE,GACC,wBACEa,KAAK,SACLD,UAAS,2BAAsBhB,IAAaJ,EAASK,MAASC,EAA0B,GAAb,YAC3EgB,QAAS,WACP,EAAKC,SAAS,CAAEnB,SAAUJ,EAASK,KAAMC,YAAY,KAJzD,sBAYJ,6BACGG,EAAMe,KAAI,SAACC,GAAD,OACT,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,eA3DrB,GAAyBC,aCtDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.56e0d349.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\ntype AppState = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nfunction getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport class App extends Component<{}, AppState> {\n  state: AppState = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const showResetButton = sortType !== SortType.NONE || isReversed;\n    const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${sortType === SortType.ALPHABET ? '' : 'is-light'}`}\n            onClick={() => {\n              this.setState({ sortType: SortType.ALPHABET });\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${sortType === SortType.LENGTH ? '' : 'is-light'}`}\n            onClick={() => {\n              this.setState({ sortType: SortType.LENGTH });\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${isReversed ? '' : 'is-light'}`}\n            onClick={() => {\n              this.setState({ isReversed: !isReversed });\n            }}\n          >\n            Reverse\n          </button>\n\n          {showResetButton && (\n            <button\n              type=\"button\"\n              className={`button is-danger ${sortType === SortType.NONE && !isReversed ? 'is-light' : ''}`}\n              onClick={() => {\n                this.setState({ sortType: SortType.NONE, isReversed: false });\n              }}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {goods.map((good) => (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}